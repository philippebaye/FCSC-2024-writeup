from pwn import *

'''
Public key:
p = 20406409234401795009072799477141701940863062576900315173684622472561503320676118843247450430236240157553242638690433890971085825184615370077001147049376899844360764748275173598173100057046307353794734571744378076595572959622064327253382459192901278480423526687306376676681770779055448909928586769702937045041072752522056993840556050852559675990026034940916964013821322803733815892794934157982327171776235186833857114979418282696022986714137282756855592335166511692000291139808415061505904533484821288548378941389717425836910211478978511362147754099074432599286089643114236360807578815809643970294159403724051015108783
g = 13153558101441297823050548189640355998758623737949344311894879786337801801309672457171428211251328844757788951198765715484036646245976808233488234469225874636831143113559354971250319731178322983604075686293169258209039686057864321214115815822347238210086455615398456565927622656531300096834506265529789219865323081300170555420438038371981875834109258337684281743510067104502344985752061348397085184476430282719566638179004563827734971200861698604394807924763161976922588049323626168956571249645015399119591155167702868253892644695986047292881299998858594942429135957239852770898842791660251766202216992678887079804633
y = 19053500880469292740918146457632956895463357097981332638113982125163857187505237935218305000029371483351716380553092317745020694349457017887369214110555169041229766036372774226606178754554847024894697243380301960487856777099255106864690377561434015126930274812902026442020484535212615416243705143451630445175269271667654416563414885558215873852654323162057426559346934763763036110599875977352443385082402335447357151642687043977560386929338423839182785469760482740046365795252580773589187582158374746398301810321411979354513171103942763323491281580021705467909586598649817409051142833663516654973667726776237792526557
Input a message.
>>> 20406409234401795009072799477141701940863062576900315173684622472561503320676118843247450430236240157553242638690433890971085825184615370077001147049376899844360764748275173598173100057046307353794734571744378076595572959622064327253382459192901278480423526687306376676681770779055448909928586769702937045041072752522056993840556050852559675990026034940916964013821322803733815892794934157982327171776235186833857114979418282696022986714137282756855592335166511692000291139808415061505904533484821288548378941389717425836910211478978511362147754099074432599286089643114236360807578815809643970294159403724051015108782
Input a signature. First, input r.
>>> 4708185002478754870936517153471111811889614829173638282235632370524463437717584253193541055114008470212243857614544061247739246645607622837444516362592857548491095110927139231038563488103557258985100625822183912721403429756347026506737700296506732729522918987239475045687064428299547158981412463342467198402928530111925397720522273014283587551786668725599080312999923402943369664063614784601395142012375430774323234591088241768213721672470546456598914177609208703434884418523809305095055283486107556629567023442012095906585438128294006295208957431846318839823575466567044792610244522659246883144050046850357042552876
Now, input s.
>>> 4708185002478754870936517153471111811889614829173638282235632370524463437717584253193541055114008470212243857614544061247739246645607622837444516362592857548491095110927139231038563488103557258985100625822183912721403429756347026506737700296506732729522918987239475045687064428299547158981412463342467198402928530111925397720522273014283587551786668725599080312999923402943369664063614784601395142012375430774323234591088241768213721672470546456598914177609208703434884418523809305095055283486107556629567023442012095906585438128294006295208957431846318839823575466567044792610244522659246883144050046850357042552876
Congratulations! The message and signature match. Here is your flag:
FCSC{...}
'''

host, port = "challenges.france-cybersecurity-challenge.fr", "2151"

if args.REMOTE:
  processus = remote(host,port)
else:
  processus = process(['python3', 'el-gamal-fait-1.py'])

data = processus.recvline().decode()
log.info(data)

# Récupération d'une donnée au format var = val
def recup_data():
  data = processus.recvline().decode()
  log.info(data)
  var, val = data.split('=')
  val = int(val)
  print(f'{var} = {val}')
  return val

p = recup_data()
g = recup_data()
y = recup_data()

# Calcul des inputs à fournir
s = r = pow(y, -1, p)
m = p - 1

# Fourniture des inputs
def send_input(val):
  data = processus.recvuntil(b'>>> ').decode()
  val = str(val)
  log.info(data + val)
  processus.sendline(val.encode())

send_input(m)
send_input(r)
send_input(s)

# Récupération du flag
datas = processus.recvlinesS(2)
[log.info(data) for data in datas]

processus.close()
